[tool.poetry]
name = "RO-LeetCode"
version = "0.20.1"
description = "Various LeetCode exercises done"
authors = ["Ryan Ozawa <ryan.ozawa21@gmail.com>"]
license = "MIT"
readme = "README.md"
package-mode = false

[project]
name = "RO-LeetCode"
version = "0.19.0"
description = "Various LeetCode exercises done"
authors = [{ name = "Ryan Ozawa", email = "ryan.ozawa21@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"
classifiers = ["Programming Language :: Python :: 3"]

[tool.poetry.dependencies]
python = "^3.10"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
ruff = "^0.5.6"
black = "^24.3.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
# Enable autofix for rules that support it.
fix = true
# Indent width for long-line violations
indent-width = 4
# Same as Black.
line-length = 88

output-format = "concise"

required-version = ">=0.5.5"
# Show fixes in the output.
show-fixes = true
target-version = "py310"

[tool.ruff.format]
skip-magic-trailing-comma = false

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# all rules are fixable
fixable = ["ALL"]
unfixable = []
ignore = [
    "D100",   # Missing docstring in public module
    "TCH003", # Type checking block
    "N802",   # function name should be lowercase, leetCode usually gives camelCase
    "ANN",    # flake8-annotations, https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "ERA001", # commented out code
    "I001",   # isort, we use actual isort
]
select = ["ALL"]


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["D104"] # ignore missing docstring in __init__.py files

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.isort]
force_sort_within_sections = true
force_single_line = true
known_first_party = []
# this new option doesn't work quite yet
# import_headings = { "STDLIB" = "Standard Library Ruff", "THIRDPARTY" = "External Party", "FIRSTPARTY" = "My Modules" }
import_heading_stdlib = "Standard Library"
import_heading_thirdparty = "External Party"
import_heading_firstparty = "My Modules"
profile = "black"
group_by_package = true

[tool.pytest.ini_options]
addopts = ["--doctest-modules", "--doctest-continue-on-failure"]
minversion = "8.0"
testpaths = ["."]
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
