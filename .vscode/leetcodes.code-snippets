{
	// Place your Leetcode workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"LeetCode Problem Template": {
		"scope": "python",
		"prefix": "leetclass",
		"description": "Template for filling in the LeetCode solution class in Python",
		"body": [
			"import doctest",
			"class Solution:  # noqa: D101",
			"    def ${1: func}(${2:ARGS}):\n        ${0:...}",
			"\ndef main():",
			"    $BLOCK_COMMENT_START${3:Problem Name} on LeetCode.\n",
			"    ====================================================\n",
			"    Setup:",
			"        >>> sol = Solution()\n",
			"    Example 1:",
			"        >>> sol.${1}(${4:Args})",
			"        ${5:Result}\n",
			"$BLOCK_COMMENT_END",
			"\n\nif __name__ == \"__main__\":",
			"    doctest.testmod(",
			"        optionflags=doctest.REPORTING_FLAGS",
			"        | doctest.ELLIPSIS",
			"        | doctest.NORMALIZE_WHITESPACE",
			"    )"
		]
	},
	"LeetCode Doctest Examples": {
		"scope": "plaintext",
		"prefix": "ltexamples",
		"description": "Layout and autofill for making an example txt for doctest in Python.",
		"body": [
			"Examples for ${1:Problem Name} on Leet Code",
			"===========================================\n",
			"Using ``Solution.${2:Func name}``\n",
			"Setup:",
			"    >>> from ${3:File name} import Solution",
			"    >>> sol = Solution()",
			"\nExample 1:",
			"    >>> sol.${2}(${4:Args})\n${0}"
		]
	},
	"LeetCode Design Problem": {
		"scope": "python",
		"prefix": "designleet",
		"description": "Layout the basics for creating necessary class for a LeetCode Design Problem",
		"body": [
			"import doctest",
			"class ${1}:",
			"    def __init__(self, ${2:Arguments}):",
			"        ...\n\n",
			"def main():",
			"    $BLOCK_COMMENT_START${3:Problem Name} on LeetCode.\n",
			"    ====================================================\n",
			"    Setup:",
			"        >>> sol = ${1}(${2})\n",
			"    Test Methods:",
			"        >>> $0",
			"$BLOCK_COMMENT_END",
			"\n\nif __name__ == \"__main__\":",
			"    doctest.testmod(optionflags=doctest.REPORTING_FLAGS | doctest.ELLIPSIS)"
		]
	}
}
